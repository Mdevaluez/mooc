#+TITLE:  Your title
#+AUTHOR: Your name
#+DATE:   Today's date
#+LANGUAGE: en
# #+PROPERTY: header-args :eval never-export

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>
#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>

* Some explanations

This is an org-mode document with code examples in R.  Once opened in
Emacs, this document can easily be exported to HTML, PDF, and Office
formats. For more information on org-mode, see
https://orgmode.org/guide/.

When you type the shortcut =C-c C-e h o=, this document will be
exported as HTML. All the code in it will be re-executed, and the
results will be retrieved and included into the exported document. If
you do not want to re-execute all code each time, you can delete the #
and the space before ~#+PROPERTY:~ in the header of this document.

Like we showed in the video, R code is included as follows (and is
exxecuted by typing ~C-c C-c~):

#+begin_src R :results output :exports both
print("Hello world!")
#+end_src

#+RESULTS:
: [1] "Hello world!"

And now the same but in an R session. This is the most frequent
situation, because R is really an interactive language. With a
session, R's state, i.e. the values of all the variables, remains
persistent from one code block to the next. The code is still executed
using ~C-c C-c~.

#+begin_src R :results output :session *R* :exports both
summary(cars)
#+end_src

#+RESULTS:
:      speed           dist       
:  Min.   : 4.0   Min.   :  2.00  
:  1st Qu.:12.0   1st Qu.: 26.00  
:  Median :15.0   Median : 36.00  
:  Mean   :15.4   Mean   : 42.98  
:  3rd Qu.:19.0   3rd Qu.: 56.00  
:  Max.   :25.0   Max.   :120.00

Finally, an example for graphical output:
#+begin_src R :results output graphics :file "./cars.png" :exports results :width 600 :height 400 :session *R* 
plot(cars)
#+end_src

#+RESULTS:
[[file:./cars.png]]

Note the parameter ~:exports results~, which indicates that the code
will not appear in the exported document. We recommend that in the
context of this MOOC, you always leave this parameter setting as
~:exports both~, because we want your analyses to be perfectly
transparent and reproducible.

Watch out: the figure generated by the code block is /not/ stored in
the org document. It's a plain file, here named ~cars.png~. You have
to commit it explicitly if you want your analysis to be legible and
understandable on GitLab.

Finally, don't forget that we provide in the resource section of this
MOOC a configuration with a few keyboard shortcuts that allow you to
quickly create code blocks in R by typing ~<r~ or ~<R~ followed by
~Tab~.

Now it's your turn! You can delete all this information and replace it
by your computational document.
